name: Init terraform remote deploy

on:
  push:
    branches: ["main", "dev"]
  workflow_call:
    inputs:
      terraform_folder:
        type: string
        required: false
        description: Path to a Terraform configs folder
        default: deploy

env:
  YC_TOKEN: ${{ secrets.YC_TOKEN }}

jobs:
  terraform-init:
    name: Terraform apply
    runs-on: ubuntu-latest

    outputs:
      document-api-endpoint: ${{ steps.terraform-outputs.outputs.document-api-endpoint }}
      bucket-name: ${{ steps.terraform-outputs.outputs.bucket-name }}
      access-key: ${{ steps.terraform-outputs.outputs.access-key }}
      secret-key: ${{ steps.terraform-outputs.outputs.secret-key }}

    defaults:
      run:
        shell: bash

    env:
      BASE_DIR: deploy

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    
    - name: Terraform apply
      run: |
        terraform -chdir=${{ env.BASE_DIR }} init
        terraform -chdir=${{ env.BASE_DIR }} plan -input=false -var-file tfvars/testing.vars
        terraform -chdir=${{ env.BASE_DIR }} apply -auto-approve -input=false -var-file tfvars/testing.vars
      # env:
      #   YC_TOKEN: ${{ secrets.YCLOUN_ACCESS_TOKEN_TESTING }}

    - name: Terraform outputs
      id: terraform-outputs
      run: |
        dynamodb_api_endpoint=$(terraform -chdir=${{ env.BASE_DIR }} output document-api-endpoint)
        s3_storage_tfstate=$(terraform -chdir=${{ env.BASE_DIR }} output storage-tfstate)
        bucket_name=$(echo $s3_storage_tfstate | jq -r '.bucket')
        access_key=$(echo $s3_storage_tfstate | jq -r '.access_key')
        secret_key=$(echo $s3_storage_tfstate | jq -r '.secret_key')

        echo "document-api-endpoint=$dynamodb_api_endpoint" >> "$GITHUB_OUTPUT"
        echo "bucket-name=$bucket_name" >> "$GITHUB_OUTPUT"
        echo "access-key=$access_key" >> "$GITHUB_OUTPUT"
        echo "secret-key=$secret_key" >> "$GITHUB_OUTPUT"


  dynamodb-init:
    name: Create table into DynamoDB
    runs-on: ubuntu-latest
    needs: terraform-init

    defaults:
      run:
        shell: bash

    env:
      REGION: ru-central1
      TABLE_NAME: lock

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # install the python version needed

    - name: Install python packages
      run: |
        python -m pip install --upgrade pip
        pip install -r scripts/requirements.txt

    - name: execute py script # run main.py
      run: python scripts/dynamodb_init.py
      env:
        TABLE_NAME: ${{ env.TABLE_NAME }}
        DOCUMENT_API_ENDPOINT: ${{ needs.terraform-init.outputs.document-api-endpoint }}
        REGION_NAME: ${{ env.REGION }}
        AWS_ACCESS_KEY_ID: ${{ needs.terraform-init.outputs.access-key }}
        AWS_SECRET_ACCESS_KEY: ${{ needs.terraform-init.outputs.secret-key }}
